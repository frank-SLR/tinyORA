CURSOR_NAME : str
FROM_TAB : { [ <SCHEMA>. ] <TABLE_NAME> [ <TAB_ALIAS> ] | <CURSOR_NAME> [ <CUR_ALIAS> ] }
FROM_OBJ : { <FROM_TAB> | ( <SELECT> ) <CUR_ALIAS> }
COLUMN_NAME : str
SCHEMA : str
TABLE_NAME : str
CONSTANT : { str | int | hex | float }
COL_ALIAS : str
USERNAME: str
PASSWORD: str
FORMAT: { str | int | hex | float }
GENERIC_COL : [ { [ <SCHEMA>. ] <TABLE_NAME> . | <TAB_ALIAS> . } ] <COLUMN_NAME> [COL_ALIAS]
SEL_COL : { [ { [ <SCHEMA>. ] <TABLE_NAME> . | <TAB_ALIAS> . } ] { <COLUMN_NAME> [COL_ALIAS] | * } | <FUNCTION> | <CONSTANT> }
WHERE_COMPARE : { = | > | < | >= | <= | <> | != }
WHERE_CMP : [[ ( ]] <SEL_COL> <WHERE_COMPARE> <SEL_COL> [[ ) ]]
WHERE_BETWEEN : [[ ( ]] <SEL_COL> between <SEL_COL> and <SEL_COL> [[ ) ]]
LIST_COLS : <SEL_COL> [ , <SEL_COL> ]
WHERE_IN : [[ ( ]] <SEL_COL> in ( <LIST_COLS> | <SELECT> ) [[ ) ]]
WHERE_CLAUSE : [[ ( ]] { <WHERE_CMP> | <WHERE_BETWEEN> | <WHERE_IN> } [ { and | or } <WHERE_CLAUSE> ] [[ ) ]]
INNER_CLAUSE : <GENERIC_COL> <WHERE_COMPARE> <GENERIC_COL>
FUNCTION : { UPPER|LOWER } ( <SEL_COL> )
           SUBSTR ( <SEL_COL>, <SEL_COL>, <SEL_COL>)
           TO_CHAR ( <SEL_COL>, <SEL_COL> )
           DECODE ( <SEL_COL>, <SEL_COL>, <SEL_COL> [, <SEL_COL>, <SEL_COL> ...] )
           CHAR ( <SEL_COL> )

SELECT : 
select <SEL_COL> [ , <SEL_COL> ...]
from <FROM_OBJ> [ , <FROM_OBJ> ...]
inner join <FROM_OBJ> on <INNER_CLAUSE> [ { AND | OR} INNER_CLAUSE ...]
--left outer join <FROM_OBJ> on <INNER_CLAUSE> [ { AND | OR} INNER_CLAUSE ...]
--right outer join <FROM_OBJ> on <INNER_CLAUSE> [ { AND | OR} INNER_CLAUSE ...]
where <WHERE_CLAUSE>
--group by <SEL_COL> [ , <SEL_COL> ...]
--order by <SEL_COL> [ , <SEL_COL> ...]

WITH :
with <CURSOR_NAME> as ( <SELECT> ) [, <CURSOR_NAME> as ( <SELECT> ) ]
<SELECT>

DESC | DESCRIBE:
desc [ <SCHEMA>. ] <TABLE_NAME>

GRANT :
grant { select | insert | update | delete } on <SCHEMA> [ . <TABLE_NAME> ] to <USERNAME> [ with admin option ]
grant { create | drop } user to <USERNAME> [ with admin option ]
grant { create | drop } { table | index } on <SCHEMA> to <USERNAME> [ with admin option ]

REVOKE :
revoke { select | insert | update | delete } on <SCHEMA> [ . <TABLE_NAME> ] from <USERNAME>
revoke { create | drop } user from <USERNAME>
revoke { create | drop } { table | index } on <SCHEMA> from <USERNAME>

CREATE :
create table [ <SCHEMA>. ] <TABLE_NAME> ( <COLUMN_NAME> <FORMAT> [ , <COLUMN_NAME> <FORMAT> ...])
create table [ <SCHEMA>. ] <TABLE_NAME> as { <SELECT> | <WITH> } 
create user <USERNAME> identified by <PASSWORD>

DROP :
drop table [ <SCHEMA>. ] <TABLE_NAME>
drop user <USERNAME>

INSERT :
insert into [ <SCHEMA>. ] <TABLE_NAME> [ ( <COLUMN_NAME> [ , <COLUMN_NAME> ...] ) ] { <WITH> | <SELECT> }
insert into [ <SCHEMA>. ] <TABLE_NAME> [ ( <COLUMN_NAME> [ , <COLUMN_NAME> ...] ) ]values (  <CONSTANT> [ ,  <CONSTANT> ...] )

UPDATE :
update [ <SCHEMA>. ] <TABLE_NAME> set <COLUMN_NAME>=<CONSTANT> [ , <COLUMN_NAME>=<CONSTANT> ...] where <WHERE_CLAUSE>

DELETE :
delete from [ <SCHEMA>. ] <TABLE_NAME> where <WHERE_CLAUSE>

COMMIT
ROLLBACK

